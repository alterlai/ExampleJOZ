name: Build and Push Docker image to prod ACR

on:
  push:
    branches:
      - 'main'

jobs:  
  build-and-push-prod:
    runs-on: ubuntu-latest
    # environment: prod
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get latest tag
      id: get_tag
      run: |
        git fetch --tags
        LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

    - name: Increment tag
      id: increment_tag
      run: |
        # Extract the last number in the tag (assuming tags follow semantic versioning: 1.2.3)
        IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_TAG" # Split by '.'
        LAST_INDEX=$((${#VERSION_PARTS[@]} - 1)) # Find the last part
        VERSION_PARTS[$LAST_INDEX]=$((VERSION_PARTS[$LAST_INDEX] + 1)) # Increment the last number
        NEW_TAG="$(IFS='.'; echo "${VERSION_PARTS[*]}")" # Reconstruct the tag
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Create new tag
      run: |
        git tag $NEW_TAG
        git push origin $NEW_TAG
      env:
        NEW_TAG: ${{ env.NEW_TAG }}

    - name: Log in to Azure Container Registry (ACR)
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.PROD_ACR_NAME }}.azurecr.io
        username: ${{ secrets.PROD_ACR_NAME }}
        password: ${{ secrets.PROD_ACR_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image to ACR
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./AutoIoTExample/Dockerfile
        build-args: |
            GITHUBNAMEARG=${{ secrets.GH_USERNAME }}
            GITHUBPATARG=${{ secrets.GH_PAT }}
        push: true
        tags: ${{ secrets.PROD_ACR_NAME }}.azurecr.io/${{ vars.REPOSITORY_NAME }}:${{ env.NEW_TAG }}-amd64
